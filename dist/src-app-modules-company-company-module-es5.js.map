{"version":3,"sources":["webpack:///src/app/modules/company/company/company.component.html","webpack:///src/app/modules/company/company.module.ts","webpack:///src/app/modules/company/company/company.component.css","webpack:///src/app/modules/company/company/company.component.ts","webpack:///src/app/modules/core/services/company.service.ts","webpack:///src/app/modules/core/services/places.service.ts"],"names":["CompanyModule","declarations","imports","forChild","path","component","data","roles","ADMIN","exports","CompanyComponent","companyService","formBuilder","placesService","branchService","subcriptions","getAllBranchForList","subscribe","getProvinceList","provinceSubscriber","province","resData","provinces","getOwnCompanySubscriber","getOwnCompany","getDistrictList","id","company","districts","console","log","form","setValue","name","type","district","group","required","add","reset","unsubscribe","provinceId","patchValue","valid","value","formData","FormData","append","JSON","stringify","selectedCompanyImage","updateOwnCompany","event","target","files","selector","template","CompanyService","httpClient","constant","get","SERVICE_URL","pipe","post","providedIn","PlacesService","localStorageService","next","setProvinceList","params","set"],"mappings":"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","file":"src-app-modules-company-company-module-es5.js","sourcesContent":["export default \"<div class=\\\"header pb-8 pt-5 pt-lg-8 d-flex align-items-center\\\"\\n  style=\\\"min-height: 600px; background-image: url(assets/img/theme/profile-cover.jpg); background-size: cover; background-position: center top;\\\">\\n  <!-- Mask -->\\n  <span class=\\\"mask bg-gradient-danger opacity-8\\\"></span>\\n  <!-- Header container -->\\n  <div class=\\\"container-fluid d-flex align-items-center\\\">\\n\\n\\n\\n\\n\\n  </div>\\n</div>\\n<div class=\\\"container-fluid mt--7\\\">\\n  <div class=\\\"row justify-content-md-center\\\">\\n    <div class=\\\"col-xl-8 order-xl-2\\\">\\n      <form role=\\\"form\\\" [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n        <div class=\\\"card bg-secondary shadow\\\">\\n          <div class=\\\"card-header bg-white border-0\\\">\\n            <div class=\\\"row align-items-center\\\">\\n              <div class=\\\"col-8\\\">\\n                <h3 class=\\\"mb-0\\\">Şirket</h3>\\n              </div>\\n              <div class=\\\"col-4 text-right\\\">\\n                <button type=\\\"submit\\\" class=\\\"btn btn-sm btn-primary\\\">Kaydet</button>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"card-body\\\">\\n\\n\\n            <div class=\\\"pl-lg-4\\\">\\n\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-lg-6 center\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <div class=\\\"card-company-image\\\">\\n                      <input\\n                        style=\\\"display: none\\\"\\n                        type=\\\"file\\\" (change)=\\\"onFileChanged($event)\\\"\\n                        #fileInput>\\n                      <a  (click)=\\\"fileInput.click()\\\">\\n                        <img [src]=\\\"company.logo\\\" class=\\\"rounded-circle\\\">\\n                      </a>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-lg-6\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label class=\\\"form-control-label\\\" for=\\\"name\\\">Şirket</label>\\n                    <input type=\\\"text\\\" id=\\\"name\\\" formControlName=\\\"name\\\" name=\\\"name\\\"\\n                      class=\\\"form-control form-control-alternative\\\" placeholder=\\\"name\\\">\\n                  </div>\\n                </div>\\n                <div class=\\\"col-lg-6\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label class=\\\"form-control-label\\\" for=\\\"type\\\">Tür</label>\\n                    <input type=\\\"text\\\" id=\\\"type\\\" formControlName=\\\"type\\\" name=\\\"type\\\"\\n                      class=\\\"form-control form-control-alternative\\\" placeholder=\\\"\\\">\\n                  </div>\\n                </div>\\n              </div>\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-lg-6\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <select id=\\\"country\\\" #t (change)=\\\"selectOnChange(t.value)\\\"\\n                      class=\\\"form-control form-control-alternative\\\" formControlName=\\\"province\\\">\\n                      <option *ngFor=\\\"let p of provinces\\\" [value]=\\\"p.id\\\">{{ p.name }}</option>\\n                    </select>\\n                  </div>\\n                </div>\\n                <div class=\\\"col-lg-6\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <select id=\\\"country\\\" class=\\\"form-control form-control-alternative\\\" formControlName=\\\"district\\\">\\n                      <option *ngFor=\\\"let d of districts\\\" [value]=\\\"d.id\\\">{{ d.name }}</option>\\n                    </select>\\n                  </div>\\n                </div>\\n\\n              </div>\\n\\n            </div>\\n\\n            <hr class=\\\"my-4\\\" />\\n            <!-- Description -->\\n            <h6 class=\\\"heading-small text-muted mb-4\\\">Şube Bilgileri</h6>\\n            <app-branch-list></app-branch-list>\\n          </div>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</div>\\n\"","import { CommonModule } from \"@angular/common\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { ReactiveFormsModule } from \"@angular/forms\";\r\nimport { RouterModule } from \"@angular/router\";\r\nimport { BranchModule } from \"../branch/branch.module\";\r\nimport { Role } from \"../core/enums/Role.enum\";\r\nimport { CompanyComponent } from './company/company.component';\r\n\r\n@NgModule({\r\n    declarations:[CompanyComponent],\r\n    imports:[\r\n        CommonModule,\r\n        ReactiveFormsModule,\r\n        RouterModule.forChild([\r\n            {path:'', component:CompanyComponent, data: { roles : [Role.ADMIN]}}\r\n        ]),\r\n        BranchModule\r\n    ],\r\n    exports:[]\r\n})\r\nexport class CompanyModule{\r\n\r\n}","export default \".card-company-image img\\r\\n{\\r\\n    box-shadow: 0 0 2rem 0 rgba(136, 152, 170, .15) !important;\\r\\n}\\r\\n\\r\\n\\r\\n.card-company-image\\r\\n{\\r\\n    position: relative;\\r\\n}\\r\\n\\r\\n\\r\\n.card-company-image img\\r\\n{\\r\\n    position: relative;\\r\\n    left: 50%;\\r\\n\\r\\n    max-width: 180px;\\r\\n\\r\\n    -webkit-transition: all .15s ease;\\r\\n\\r\\n    transition: all .15s ease; \\r\\n    -webkit-transform: translate(-50%, -30%); \\r\\n            transform: translate(-50%, -30%);\\r\\n\\r\\n    border-radius: .375rem;\\r\\n}\\r\\n\\r\\n\\r\\n.card-company-image img:hover\\r\\n{\\r\\n    -webkit-transform: translate(-50%, -33%);\\r\\n            transform: translate(-50%, -33%);\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9jb21wYW55L2NvbXBhbnkvY29tcGFueS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztJQUVJLDBEQUEwRDtBQUM5RDs7O0FBR0E7O0lBRUksa0JBQWtCO0FBQ3RCOzs7QUFDQTs7SUFFSSxrQkFBa0I7SUFDbEIsU0FBUzs7SUFFVCxnQkFBZ0I7O0lBRWhCLGlDQUF5Qjs7SUFBekIseUJBQXlCO0lBQ3pCLHdDQUFnQztZQUFoQyxnQ0FBZ0M7O0lBRWhDLHNCQUFzQjtBQUMxQjs7O0FBQ0E7O0lBRUksd0NBQWdDO1lBQWhDLGdDQUFnQztBQUNwQyIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tcGFueS9jb21wYW55L2NvbXBhbnkuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jYXJkLWNvbXBhbnktaW1hZ2UgaW1nXHJcbntcclxuICAgIGJveC1zaGFkb3c6IDAgMCAycmVtIDAgcmdiYSgxMzYsIDE1MiwgMTcwLCAuMTUpICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcblxyXG4uY2FyZC1jb21wYW55LWltYWdlXHJcbntcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxufVxyXG4uY2FyZC1jb21wYW55LWltYWdlIGltZ1xyXG57XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICBsZWZ0OiA1MCU7XHJcblxyXG4gICAgbWF4LXdpZHRoOiAxODBweDtcclxuXHJcbiAgICB0cmFuc2l0aW9uOiBhbGwgLjE1cyBlYXNlOyBcclxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC0zMCUpO1xyXG5cclxuICAgIGJvcmRlci1yYWRpdXM6IC4zNzVyZW07XHJcbn1cclxuLmNhcmQtY29tcGFueS1pbWFnZSBpbWc6aG92ZXJcclxue1xyXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTMzJSk7XHJcbn0iXX0= */\"","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { Company } from '../../core/model/company.model';\nimport { District } from '../../core/model/district.model';\nimport { Province } from '../../core/model/province.model';\nimport { BranchService } from '../../core/services/branch.service';\nimport { CompanyService } from '../../core/services/company.service';\nimport { PlacesService } from '../../core/services/places.service';\n\n@Component({\n  selector: 'app-company',\n  templateUrl: './company.component.html',\n  styleUrls: ['./company.component.css']\n})\nexport class CompanyComponent implements OnInit,OnDestroy {\n \n subcriptions= new Subscription(); \n  \n  provinces:Province[];\n  districts:District[];\n\n \n\n  form:FormGroup;\n  company:Company;\n  selectedCompanyImage: File\n\n  constructor(private companyService:CompanyService,\n    private formBuilder:FormBuilder,\n    private placesService:PlacesService,\n    private branchService:BranchService) { }\n\n  ngOnInit(): void {\n    this.branchService.getAllBranchForList().subscribe();\n    this.placesService.getProvinceList();\n\n    let provinceSubscriber:Subscription;\n    provinceSubscriber = this.placesService.province.subscribe(resData=>{\n      if(resData){\n        this.provinces = resData;\n      }\n    });\n\n    let getOwnCompanySubscriber:Subscription;\n    getOwnCompanySubscriber = this.companyService.getOwnCompany().subscribe(resData =>{\n     \n      \n      this.placesService.getDistrictList(resData.province.id).subscribe(data =>{\n        this.company = resData;\n        this.districts = data;\n        console.log(data);\n        this.form.setValue({\n          name: resData.name,\n          type: resData.type,\n          district: resData.district.id,\n          province: resData.province.id,\n        });  \n      });\n      \n      \n\n    });\n\n    this.form =  this.formBuilder.group({\n      name: [null,Validators.required],\n      type: [null,Validators.required],\n      province:[null,null],\n      district:[null,null]\n    });\n\n\n    this.subcriptions\n      .add(provinceSubscriber)\n      .add(getOwnCompanySubscriber);\n\n    \n   \n  }\n\n  ngOnDestroy(): void\n  {\n    if(this.form){\n      this.form.reset();\n    }\n    \n    this.subcriptions.unsubscribe();\n  }\n\n\n  selectOnChange(provinceId:number){\n    this.placesService.getDistrictList(provinceId).subscribe(resData =>{\n      this.districts = resData;\n      this.form.patchValue({\n        district: null\n      })\n    });\n    \n  }\n\n  onSubmit(){\n    if(this.form.valid){\n      \n      const company:Company = this.form.value;\n      company.id = this.company.id;\n      const formData = new FormData();\n      formData.append('company',JSON.stringify(company));\n      formData.append('file',this.selectedCompanyImage);\n      this.companyService.updateOwnCompany(formData).subscribe(resData =>{\n        console.log(resData);\n      });\n    }\n  }\n\n  onFileChanged(event) {\n    this.selectedCompanyImage = event.target.files[0];\n  }\n\n}\n","import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { take } from \"rxjs/operators\";\nimport { Constant } from \"../constant/constant\";\nimport { Company } from \"../model/company.model\";\n\n@Injectable({providedIn : 'root'})\nexport class CompanyService{\n\n    constant = new Constant();\n\n    constructor(private httpClient:HttpClient){}\n\n    public getOwnCompany(){\n        return this.httpClient.get<Company>(this.constant.SERVICE_URL+\"/manage/company\").pipe(take(1));\n    }\n\n    public updateOwnCompany(formData:FormData){\n       return this.httpClient.post<Company>(this.constant.SERVICE_URL+\"/manage/company\",formData).pipe(take(1));\n    }\n\n    \n}","import { HttpClient, HttpParams } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { BehaviorSubject } from \"rxjs\";\r\nimport { take, tap } from \"rxjs/operators\";\r\nimport { Constant } from \"../constant/constant\";\r\nimport { District } from \"../model/district.model\";\r\nimport { Province } from \"../model/province.model\";\r\nimport { LocalStorageService } from \"./local-storage.service\";\r\n\r\n@Injectable({providedIn : 'root'})\r\nexport class PlacesService{\r\nprovince= new BehaviorSubject<Province[]>(null);\r\ndistrict= new BehaviorSubject<District[]>(null);\r\nconstant = new Constant();\r\n\r\nconstructor(private localStorageService:LocalStorageService,private httpClient:HttpClient){}\r\n\r\n\r\ngetProvinceList(){\r\n    let province:Province[] = this.localStorageService.getProvinceList();\r\n    if(province){\r\n        console.log(province);\r\n        this.province.next(province);\r\n    }\r\n        \r\n    this.httpClient.get<Province[]>(this.constant.SERVICE_URL+'/places/province').pipe(take(1))\r\n    .subscribe(resData =>{\r\n        this.localStorageService.setProvinceList(resData);\r\n        this.province.next(resData);\r\n    });\r\n    \r\n}\r\n\r\ngetDistrictList(id:number) {\r\n    return this.httpClient.get<District[]>(this.constant.SERVICE_URL+'/places/district',{\r\n        params: new HttpParams().set('id',''+id)\r\n    }).pipe(take(1),tap(resData=>{\r\n        console.log(\"getDestrictList\");\r\n    }));\r\n}\r\n\r\n}"]}