{"version":3,"sources":["webpack:///src/app/modules/branch/branch-item/branch-item.component.html","webpack:///src/app/modules/branch/branch-list/branch-list.component.html","webpack:///src/app/modules/branch/edit/edit.component.html","webpack:///src/app/modules/branch/branch-item/branch-item.component.css","webpack:///src/app/modules/branch/branch-item/branch-item.component.ts","webpack:///src/app/modules/branch/branch-list/branch-list.component.css","webpack:///src/app/modules/branch/branch-list/branch-list.component.ts","webpack:///src/app/modules/branch/branch.module.ts","webpack:///src/app/modules/branch/edit/edit.component.css","webpack:///src/app/modules/branch/edit/edit.component.ts","webpack:///src/app/modules/core/resolver/branch-edit-resolver.service.ts","webpack:///src/app/modules/core/services/branch.service.ts"],"names":["BranchItemComponent","branchService","id","removeBranch","subscribe","selector","template","BranchListComponent","branchSubscriber","companyBranches","resData","branches","BranchModule","declarations","imports","forChild","path","component","resolve","exports","EditComponent","route","router","editMode","snapshot","paramMap","get","formBranch","name","required","data","branchOutput","patchValue","branchInput","fullAddress","latitude","longatitue","mapsModel","address","longitude","item","valid","console","log","value","updateBranch","navigate","BranchEditResolver","state","Promise","reject","getBranch","params","providedIn","BranchService","httpClient","constant","SERVICE_URL","pipe","next","set","branch","post"],"mappings":"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","file":"default~src-app-modules-branch-branch-module~src-app-modules-company-company-module-es5.js","sourcesContent":["export default \"\\n<td>\\n    <div class=\\\"media align-items-center\\\">\\n        <a href=\\\"javascript:void(0)\\\" class=\\\"avatar rounded-circle mr-3\\\">\\n        <img alt=\\\"Image placeholder\\\" src=\\\"../assets/img/theme/bootstrap.jpg\\\">\\n        </a>\\n        <div class=\\\"media-body\\\">\\n        <span class=\\\"mb-0 text-sm\\\">{{ branch.name }}</span>\\n        </div>\\n    </div>\\n</td>\\n<td>\\n{{ branch.fullAddress }}\\n</td>\\n \\n  \\n<td class=\\\"text-right\\\">\\n<div ngbDropdown placement=\\\"bottom-right\\\">\\n    <a class=\\\"btn btn-sm btn-icon-only text-light\\\" ngbDropdownToggle>\\n    <i class=\\\"fas fa-ellipsis-v\\\"></i>\\n    </a>\\n    <div ngbDropdownMenu class=\\\" dropdown-menu-right dropdown-menu-arrow\\\">\\n    <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['edit', branch.id]\\\" >Editle</a>\\n    <a class=\\\"dropdown-item\\\" style=\\\"color:red\\\" (click)=\\\"remove(branch.id)\\\">Sil</a>\\n   \\n    </div>\\n</div>\\n</td>\\n\"","export default \" <!-- Table -->\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col\\\">\\n        <div class=\\\"card shadow\\\">\\n          <div class=\\\"card-header border-0\\\">\\n            <div class=\\\"row align-items-center\\\">\\n              <div class=\\\"col\\\">\\n                <h3 class=\\\"mb-0\\\">Şube Bilgileri</h3>\\n              </div>\\n              <div class=\\\"col text-right\\\">\\n                <a href=\\\"#!\\\" class=\\\"btn btn-sm btn-primary\\\" [routerLink]=\\\"['/settings/branch/add']\\\">Oluştur</a>\\n              </div>\\n            </div>\\n          </div>\\n          \\n          <div class=\\\"table-responsive\\\">\\n            <table class=\\\"table align-items-center table-flush\\\">\\n              <thead class=\\\"thead-light\\\">\\n                <tr>\\n                  <th scope=\\\"col\\\">Şube Adı</th>\\n                  <th scope=\\\"col\\\">Şube Adresi</th>\\n                  <th scope=\\\"col\\\"></th>\\n                </tr>\\n              </thead>\\n              <tbody style=\\\"padding: 20px;\\\">\\n                \\n                <tr app-branch-item \\n                    *ngFor=\\\"let branchEl of branches; let i = index\\\"\\n                    [branch]=\\\"branchEl\\\" \\n                    [index]=\\\"i\\\"></tr>\\n                \\n               \\n              </tbody>\\n            </table>\\n          </div>\\n          <div class=\\\"card-footer py-4\\\">\\n            <nav aria-label=\\\"...\\\">\\n              <ul class=\\\"pagination justify-content-end mb-0\\\">\\n  \\n                <!--\\n                <li class=\\\"page-item \\\" [ngClass]=\\\"(pageable?.first) ? 'disabled' : ''\\\">\\n                  <div class=\\\"page-link\\\" (click)=\\\"changePage(0)\\\" tabindex=\\\"-1\\\">\\n                    <i class=\\\"fas fa-angle-left\\\"></i>\\n                    <span class=\\\"sr-only\\\">Previous</span>\\n                  </div>\\n                </li>\\n                <li *ngFor=\\\"let number of counter(pageable?.totalPages); let i = index\\\" \\n                  class=\\\"page-item\\\" [ngClass]=\\\"(pageable?.number == i) ? 'active' : ''\\\">\\n                    <div class=\\\"page-link\\\"  (click)=\\\"changePage(i)\\\"> {{ i+1 }}</div>\\n                </li>\\n  \\n                <li class=\\\"page-item\\\" [ngClass]=\\\"(pageable?.last) ? 'disabled' : ''\\\">\\n                  <div class=\\\"page-link\\\" (click)=\\\"changePage(pageable?.totalPages-1)\\\">\\n                    <i class=\\\"fas fa-angle-right\\\"></i>\\n                    <span class=\\\"sr-only\\\">Next</span>\\n                  </div>\\n                </li>\\n                -->\\n              </ul>\\n            </nav>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <!-- Dark table -->\\n   \\n  \"","export default \"<div class=\\\"header pb-8 pt-5 pt-lg-8 d-flex align-items-center\\\"\\n  style=\\\"min-height: 600px; background-image: url(assets/img/theme/profile-cover.jpg); background-size: cover; background-position: center top;\\\">\\n  <!-- Mask -->\\n  <span class=\\\"mask bg-gradient-danger opacity-8\\\"></span>\\n  <!-- Header container -->\\n  <div class=\\\"container-fluid d-flex align-items-center\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-lg-12 col-md-10\\\">\\n        <div class=\\\"col-md-12 col-lg-12\\\">\\n          <p class=\\\"text-white mt-0 mb-2\\\">Şirket Bilgileri</p>\\n        </div>\\n\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<div class=\\\"container-fluid mt--7\\\">\\n  <div class=\\\"row justify-content-md-center\\\">\\n    <div class=\\\"col-xl-8 order-xl-2\\\">\\n      <form role=\\\"form\\\" [formGroup]=\\\"formBranch\\\" (ngSubmit)=\\\"addBranch()\\\">\\n        <div class=\\\"card bg-secondary shadow\\\">\\n            <div class=\\\"card-header bg-white border-0\\\">\\n            <div class=\\\"row align-items-center\\\">\\n                <div class=\\\"col-8\\\">\\n                <h3 class=\\\"mb-0\\\">Şube Kayıt</h3>\\n                </div>\\n                <div class=\\\"col-4 text-right\\\">\\n                <button type=\\\"submit\\\" class=\\\"btn btn-sm btn-primary\\\">Kaydet</button>\\n                </div>\\n            </div>\\n            </div>\\n            <div class=\\\"card-body\\\">\\n                <div class=\\\"pl-lg-4\\\"></div>\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-lg-12\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label class=\\\"form-control-label\\\" for=\\\"name\\\">Şube İsmi :</label>\\n                            <input type=\\\"text\\\" id=\\\"name\\\" formControlName=\\\"name\\\" name=\\\"name\\\"  class=\\\"form-control form-control-alternative\\\"\\n                            placeholder=\\\"name\\\" >\\n                        </div>\\n                    </div>\\n                </div>\\n                \\n\\n                <div class=\\\"pl-lg-4\\\">\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-lg-12\\\">\\n                        <app-maps [inputMaps]=\\\"mapsModel\\\" (maps)=\\\"setLatitude($event)\\\"></app-maps>\\n                    </div>\\n                </div>\\n             \\n                </div>\\n                \\n               \\n               \\n            </div>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</div>\\n\"","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYnJhbmNoL2JyYW5jaC1pdGVtL2JyYW5jaC1pdGVtLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, Input, OnInit } from '@angular/core';\nimport { BranchOutput } from '../../core/model/branch-output.model';\nimport { BranchService } from '../../core/services/branch.service';\n\n@Component({\n  selector: '[app-branch-item]',\n  templateUrl: './branch-item.component.html',\n  styleUrls: ['./branch-item.component.css']\n})\nexport class BranchItemComponent implements OnInit {\n\n  @Input('branch') branch:BranchOutput;\n\n  constructor(private branchService:BranchService) { }\n\n  ngOnInit(): void {\n  }\n\n  remove(id:number){\n    this.branchService.removeBranch(id).subscribe();\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYnJhbmNoL2JyYW5jaC1saXN0L2JyYW5jaC1saXN0LmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs/internal/Subscription';\nimport { BranchOutput } from '../../core/model/branch-output.model';\nimport { BranchService } from '../../core/services/branch.service';\n\n@Component({\n  selector: 'app-branch-list',\n  templateUrl: './branch-list.component.html',\n  styleUrls: ['./branch-list.component.css']\n})\nexport class BranchListComponent implements OnInit {\n\n  branches:BranchOutput[];\n\n  constructor(private branchService:BranchService) { }\n\n  ngOnInit(): void {\n\n    let branchSubscriber:Subscription;\n    branchSubscriber = this.branchService.companyBranches.subscribe(resData =>{\n      this.branches = resData;\n    })\n  }\n\n}\n","import { AgmCoreModule } from \"@agm/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { ReactiveFormsModule } from \"@angular/forms\";\r\nimport { RouterModule } from \"@angular/router\";\r\nimport { NgbModule } from \"@ng-bootstrap/ng-bootstrap\";\r\nimport { MapsComponent } from \"../core/components/maps/maps.component\";\r\nimport { BranchEditResolver } from \"../core/resolver/branch-edit-resolver.service\";\r\nimport { BranchItemComponent } from './branch-item/branch-item.component';\r\nimport { BranchListComponent } from './branch-list/branch-list.component';\r\nimport { EditComponent } from \"./edit/edit.component\";\r\n\r\n@NgModule({\r\n    declarations:[\r\n        EditComponent,\r\n        MapsComponent,\r\n        BranchListComponent,\r\n        BranchItemComponent\r\n        \r\n    ],\r\n    imports:[\r\n        CommonModule,\r\n        ReactiveFormsModule,\r\n        AgmCoreModule,\r\n        NgbModule,\r\n        RouterModule.forChild([\r\n            {\r\n                path:'add',component:EditComponent\r\n            },\r\n            {\r\n                path:'edit/:id',component:EditComponent,resolve:[BranchEditResolver]\r\n            }\r\n           \r\n        ])\r\n    ],\r\n    exports:[\r\n        MapsComponent,\r\n        BranchListComponent\r\n    ]\r\n})\r\nexport class BranchModule{\r\n\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYnJhbmNoL2VkaXQvZWRpdC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { mapsModel } from '../../core/components/maps/maps.component';\nimport { BranchInput } from '../../core/model/branch-input.model';\nimport { BranchOutput } from '../../core/model/branch-output.model';\nimport { BranchService } from '../../core/services/branch.service';\n\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.css']\n})\nexport class EditComponent implements OnInit {\n\n  editMode:boolean;\n\n  branchInput:BranchInput;\n  formBranch:FormGroup;\n  branchOutput:BranchOutput;\n  mapsModel:mapsModel;\n  constructor(private route:ActivatedRoute,private router:Router ,private branchService:BranchService) { }\n\n  ngOnInit(): void {\n    this.editMode = this.route.snapshot.paramMap.get('id') ? true : false;\n    this.formBranch = new FormGroup({\n      name: new FormControl('',Validators.required)\n    });\n\n    if(this.editMode){\n      this.route.data.subscribe(resData =>{\n        this.branchOutput = (<BranchOutput>resData[0]);\n\n        this.formBranch.patchValue({name:this.branchOutput.name});\n        \n        this.branchInput = {\n          id: this.branchOutput.id,\n          fullAddress : this.branchOutput.fullAddress,\n          latitude : this.branchOutput.latitude,\n          longatitue : this.branchOutput.longatitue,\n          name : this.branchOutput.name\n       }\n\n        this.mapsModel = {\n          address:this.branchOutput.fullAddress,\n          latitude:this.branchOutput.latitude,\n          longitude:this.branchOutput.longatitue\n        };\n      })\n    }\n    \n    \n    \n\n  }\n\n  setLatitude(item:mapsModel){\n    debugger;\n    if(!this.editMode){\n      this.branchInput = {\n        id: null,\n        fullAddress : item.address,\n        latitude : item.latitude,\n        longatitue : item.longitude,\n        name : null\n     }\n    }else{\n      this.branchInput.latitude = item.latitude;\n      this.branchInput.longatitue = item.longitude;\n      this.branchInput.fullAddress = item.address;\n    }\n    \n\n  }\n\n  addBranch(){\n    if(this.formBranch.valid){\n      console.log( this.branchInput);\n      debugger;\n      this.branchInput.name = this.formBranch.value.name;\n      this.branchService.updateBranch(this.branchInput).subscribe(resData =>{\n        this.router.navigate(['/settings/company']);\n      });\n\n\n    }\n  }\n\n}\n","import { Injectable } from \"@angular/core\";\r\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from \"@angular/router\";\r\nimport { Observable } from \"rxjs\";\r\nimport { BranchOutput } from \"../model/branch-output.model\";\r\nimport { BranchService } from \"../services/branch.service\";\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class BranchEditResolver implements Resolve<BranchOutput>{\r\n\r\n    constructor(private branchService:BranchService){}\r\n\r\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): BranchOutput | Observable<BranchOutput> | Promise<BranchOutput>\r\n    {\r\n        return new Promise<BranchOutput>((resolve,reject) =>{\r\n            return this.branchService.getBranch(route.params['id']).subscribe(resData =>{\r\n                resolve(resData);\r\n            })\r\n        })\r\n        \r\n    }\r\n    \r\n}","import { HttpClient, HttpParams } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { BehaviorSubject } from \"rxjs\";\r\nimport { take, tap } from \"rxjs/operators\";\r\nimport { Constant } from \"../constant/constant\";\r\nimport { BranchInput } from \"../model/branch-input.model\";\r\nimport { BranchOutput } from \"../model/branch-output.model\";\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class BranchService{\r\n\r\n    companyBranches = new BehaviorSubject<BranchOutput[]>(null);\r\n    constant = new Constant();\r\n    \r\n    constructor(private httpClient:HttpClient){}\r\n\r\n\r\n    public getAllBranchForList(){\r\n       return this.httpClient.get<BranchOutput[]>(this.constant.SERVICE_URL+\"/manage/branch/all\").pipe(take(1),\r\n        tap(resData =>{\r\n            this.companyBranches.next(resData);\r\n        }))\r\n    }\r\n\r\n    public getBranch(id:number){\r\n        return this.httpClient.get<BranchOutput>(this.constant.SERVICE_URL+\"/manage/branch\",{\r\n            params : new HttpParams().set('id',''+id)  \r\n        }).pipe(take(1));\r\n    }\r\n\r\n    public updateBranch(branch:BranchInput){\r\n       return this.httpClient.post(this.constant.SERVICE_URL+\"/manage/branch\",branch).pipe(take(1))\r\n    }\r\n\r\n    public removeBranch(id:number){\r\n        return this.httpClient.delete(this.constant.SERVICE_URL+\"/manage/branch\",{\r\n            params : new HttpParams().set('id',''+id)  \r\n        }).pipe(take(1));\r\n    }\r\n\r\n}"]}