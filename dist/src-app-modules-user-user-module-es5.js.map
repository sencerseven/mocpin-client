{"version":3,"sources":["webpack:///src/app/modules/user/user-edit/user-edit.component.html","webpack:///src/app/modules/user/user-item/user-item.component.html","webpack:///src/app/modules/user/user-list/user-list.component.html","webpack:///src/app/modules/core/resolver/user-edit-resolver.service.ts","webpack:///src/app/modules/core/resolver/user-resolver.service.ts","webpack:///src/app/modules/core/services/branch.service.ts","webpack:///src/app/modules/core/services/user.service.ts","webpack:///src/app/modules/user/user-edit/user-edit.component.css","webpack:///src/app/modules/user/user-edit/user-edit.component.ts","webpack:///src/app/modules/user/user-item/user-item.component.css","webpack:///src/app/modules/user/user-item/user-item.component.ts","webpack:///src/app/modules/user/user-list/user-list.component.css","webpack:///src/app/modules/user/user-list/user-list.component.ts","webpack:///src/app/modules/user/user.module.ts"],"names":["UserEditResolver","userService","route","state","Promise","resolve","rejects","getCompanyUser","params","subscribe","resData","providedIn","UserResolverService","reject","getCompanyUsers","console","log","BranchService","httpClient","companyBranches","constant","get","SERVICE_URL","pipe","next","id","set","branch","post","UserService","localStorageService","userList","user","userId","userListTemp","response","JSON","parse","stringify","forEach","element","push","userInput","UserEditComponent","authService","router","branchService","editMode","branchesFormControl","account","getAccount","snapshot","paramMap","getAllBranchForList","branches","userName","firstName","lastName","role","radioRole","roleType","branchId","required","form","password","conditionalValidator","rePassword","valid","value","registerForm","registerUserForCompany","navigate","event","condition","validator","control","selector","template","UserItemComponent","removeUserForCompany","UserListComponent","myProfile","users","UserModule","declarations","imports","forChild","path","component","data","exports"],"mappings":"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","file":"src-app-modules-user-user-module-es5.js","sourcesContent":["export default \"<div class=\\\"header bg-gradient-danger pb-8 pt-5 pt-md-8\\\">\\n    <div class=\\\"container-fluid\\\">\\n      <div class=\\\"header-body\\\">\\n        <!-- Card stats -->\\n        \\n      </div>\\n    </div>\\n  </div>\\n  <!-- Page content -->\\n  <div class=\\\"container-fluid mt--7\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-xl-12 order-xl-1\\\">\\n      <form role=\\\"form\\\" [formGroup]=\\\"form\\\" (ngSubmit)=\\\"save()\\\">\\n        <div class=\\\"card bg-secondary shadow\\\">\\n          <div class=\\\"card-header bg-white border-0\\\">\\n            <div class=\\\"row align-items-center\\\">\\n              <div class=\\\"col-8\\\">\\n                <h3 class=\\\"mb-0\\\">Kullanıcı Ekle</h3>\\n              </div>\\n              <div class=\\\"col-4 text-right\\\">\\n                <button type=\\\"submit\\\" class=\\\"btn btn-sm btn-primary\\\">Kaydet</button>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"card-body\\\">\\n\\n            <h6 class=\\\"heading-small text-muted mb-4\\\">Kişisel Bilgiler</h6>\\n            <div class=\\\"pl-lg-4\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-lg-6\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label class=\\\"form-control-label\\\" for=\\\"input-username\\\">Kullanıcı Adı</label>\\n                    <input type=\\\"text\\\" formControlName=\\\"userName\\\" id=\\\"input-username\\\" name=\\\"userName\\\"\\n                      class=\\\"form-control form-control-alternative\\\">\\n                  </div>\\n                </div>\\n              </div>\\n\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-lg-6\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label class=\\\"form-control-label\\\" for=\\\"input-password\\\">Şifre</label>\\n                    <input type=\\\"password\\\" formControlName=\\\"password\\\" id=\\\"input-password\\\" name=\\\"password\\\"\\n                      class=\\\"form-control form-control-alternative\\\">\\n                  </div>\\n                </div>\\n                <div class=\\\"col-lg-6\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label class=\\\"form-control-label\\\" for=\\\"input-repassword\\\">Şifre Tekrar</label>\\n                    <input type=\\\"password\\\" formControlName=\\\"rePassword\\\" id=\\\"input-repassword\\\"  name=\\\"rePassword\\\"\\n                      class=\\\"form-control form-control-alternative\\\" >\\n                  </div>\\n                </div>\\n              </div>\\n\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-lg-6\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label class=\\\"form-control-label\\\" for=\\\"input-first-name\\\">Adı</label>\\n                    <input type=\\\"text\\\" formControlName=\\\"firstName\\\" id=\\\"input-first-name\\\" name=\\\"firstName\\\"\\n                      class=\\\"form-control form-control-alternative\\\">\\n                  </div>\\n                </div>\\n                <div class=\\\"col-lg-6\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label class=\\\"form-control-label\\\" for=\\\"input-last-name\\\">Soyadı</label>\\n                    <input type=\\\"text\\\" formControlName=\\\"lastName\\\" id=\\\"input-last-name\\\"  name=\\\"lastName\\\"\\n                      class=\\\"form-control form-control-alternative\\\" >\\n                  </div>\\n                </div>\\n              </div>\\n\\n\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-lg-6\\\">\\n                  <div class=\\\"form-group\\\" >\\n                    <label *ngIf=\\\"account.isAdmin()\\\">\\n                        <input type=\\\"radio\\\"  value=\\\"ADMIN\\\" formControlName=\\\"role\\\" (change)=\\\"handleChange($event.target.value)\\\">\\n                        <span>Admin</span>\\n                    </label>\\n                    <label>\\n                      <input type=\\\"radio\\\" value=\\\"SUPERVISOR\\\" formControlName=\\\"role\\\" (change)=\\\"handleChange($event.target.value)\\\">\\n                      <span>Supervisor</span>\\n                  </label>\\n                    <label>\\n                        <input type=\\\"radio\\\" value=\\\"STAFF\\\" formControlName=\\\"role\\\" (change)=\\\"handleChange($event.target.value)\\\">\\n                        <span>Staff</span>\\n                    </label>\\n                  </div>\\n                </div>\\n                <div class=\\\"col-lg-6\\\" *ngIf=\\\"account.isAdmin() && branches && (radioRole == 'STAFF' || radioRole == 'SUPERVISOR')\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <label class=\\\"form-control-label\\\" for=\\\"input-branches\\\">Şubeler</label>\\n                      <select id=\\\"input-branches\\\" class=\\\"form-control form-control-alternative\\\" formControlName=\\\"branches\\\"  >\\n                        <option *ngFor=\\\"let b of branches\\\" [value]=\\\"b.id\\\" >{{ b.name }}</option>\\n                       </select> \\n                    </div>\\n                </div>    \\n\\n\\n              </div>\\n\\n            </div>\\n            <hr class=\\\"my-4\\\" />\\n         \\n          </div>\\n        </div>\\n        </form>\\n    </div>\\n  </div>\\n</div>\\n\\n  \"","export default \"<th scope=\\\"row\\\">\\n    <div class=\\\"media align-items-center\\\">\\n      <a href=\\\"javascript:void(0)\\\" class=\\\"avatar rounded-circle mr-3\\\">\\n        <img alt=\\\"Image placeholder\\\" src=\\\"../assets/img/theme/bootstrap.jpg\\\">\\n      </a>\\n      <div class=\\\"media-body\\\">\\n        <span class=\\\"mb-0 text-sm\\\">{{ user.userName }}</span>\\n      </div>\\n    </div>\\n  </th>\\n  <th scope=\\\"row\\\">\\n    <div class=\\\"media align-items-center\\\">\\n      <div class=\\\"media-body\\\">\\n        <span class=\\\"mb-0 text-sm\\\">{{ user.firstName }}</span>\\n      </div>\\n    </div>\\n  </th>\\n  <th scope=\\\"row\\\">\\n    <div class=\\\"media align-items-center\\\">\\n      <div class=\\\"media-body\\\">\\n        <span class=\\\"mb-0 text-sm\\\">{{ user.lastName  }}</span>\\n      </div>\\n    </div>\\n  </th>\\n  <th scope=\\\"row\\\">\\n    <div class=\\\"media align-items-center\\\">\\n      <div class=\\\"media-body\\\">\\n        <span class=\\\"mb-0 text-sm\\\">{{ user.email  }}</span>\\n      </div>\\n    </div>\\n  </th>\\n  <th scope=\\\"row\\\">\\n    <div class=\\\"media align-items-center\\\">\\n      <div class=\\\"media-body\\\">\\n        <span class=\\\"mb-0 text-sm\\\">{{ user.roleType.join(', ') }}</span>\\n      </div>\\n    </div>\\n  </th>\\n  <td class=\\\"text-right\\\">\\n    <div ngbDropdown placement=\\\"bottom-right\\\">\\n      <a class=\\\"btn btn-sm btn-icon-only text-light\\\" ngbDropdownToggle>\\n        <i class=\\\"fas fa-ellipsis-v\\\"></i>\\n      </a>\\n      <div ngbDropdownMenu class=\\\" dropdown-menu-right dropdown-menu-arrow\\\">\\n        <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['edit', user.id]\\\">Editle</a>\\n        <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\">Pasife Çek</a>\\n        <a class=\\\"dropdown-item\\\" style=\\\"color:red\\\" (click)=\\\"remove(user.id)\\\">Sil</a>\\n      </div>\\n    </div>\\n  </td>\\n\"","export default \"<div class=\\\"header bg-gradient-danger pb-8 pt-5 pt-md-8\\\">\\n    <div class=\\\"container-fluid\\\">\\n      <div class=\\\"header-body\\\">\\n        <!-- Card stats -->\\n        \\n      </div>\\n    </div>\\n  </div>\\n  <!-- Page content -->\\n  <div class=\\\"container-fluid mt--7\\\">\\n    <!-- Table -->\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col\\\">\\n        <div class=\\\"card shadow\\\">\\n          <div class=\\\"card-header border-0\\\">\\n            <div class=\\\"row align-items-center\\\">\\n              <div class=\\\"col\\\">\\n                <h3 class=\\\"mb-0\\\">Kullanıcı Listesi</h3>\\n              </div>\\n              <div class=\\\"col text-right\\\">\\n                <a href=\\\"#!\\\" class=\\\"btn btn-sm btn-primary\\\" [routerLink]=\\\"['add']\\\">Oluştur</a>\\n              </div>\\n            </div>\\n          </div>\\n          \\n          <div class=\\\"table-responsive\\\">\\n            <table class=\\\"table align-items-center table-flush\\\">\\n              <thead class=\\\"thead-light\\\">\\n                <tr>\\n                  <th scope=\\\"col\\\">Kullanıcı Adı:</th>\\n                  <th scope=\\\"col\\\">Adı</th>\\n                  <th scope=\\\"col\\\">Soyadı</th>\\n                  <th scope=\\\"col\\\">Email</th>\\n                  <th scope=\\\"col\\\">Rol</th>\\n                  <th scope=\\\"col\\\"></th>\\n                </tr>\\n              </thead>\\n              <tbody style=\\\"padding: 20px;\\\">\\n                <ng-container  *ngFor=\\\"let userEl of users;\\\" >\\n                  <tr app-user-item *ngIf=\\\"userEl.id != myProfile.accountDetail.id\\\" [user]='userEl'></tr>\\n              </ng-container>\\n              </tbody>\\n            </table>\\n          </div>\\n          <div class=\\\"card-footer py-4\\\">\\n            <nav aria-label=\\\"...\\\">\\n              <ul class=\\\"pagination justify-content-end mb-0\\\">\\n  \\n                \\n                \\n              </ul>\\n            </nav>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <!-- Dark table -->\\n   \\n  </div>\\n  \"","import { Injectable } from \"@angular/core\";\r\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from \"@angular/router\";\r\nimport { Observable } from \"rxjs/internal/Observable\";\r\nimport { UserOutput } from \"../model/user-output.model\";\r\nimport { UserService } from \"../services/user.service\";\r\n\r\n@Injectable({ providedIn : 'root' })\r\nexport class UserEditResolver implements Resolve<UserOutput>{\r\n\r\n    constructor(private userService:UserService){}\r\n\r\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): UserOutput | Observable<UserOutput> | Promise<UserOutput>\r\n    {\r\n        return new Promise((resolve,rejects) =>{\r\n            this.userService.getCompanyUser(route.params['id']).subscribe(resData =>{\r\n                resolve(resData);\r\n            })\r\n            \r\n        })\r\n    }\r\n    \r\n}","import { Injectable } from \"@angular/core\";\r\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from \"@angular/router\";\r\nimport { Observable } from \"rxjs/internal/Observable\";\r\nimport { UserOutput } from \"../model/user-output.model\";\r\nimport { UserService } from \"../services/user.service\";\r\n\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class UserResolverService implements Resolve<UserOutput[]>{\r\n\r\n    constructor(private userService:UserService){}\r\n\r\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): UserOutput[] | Observable<UserOutput[]> | Promise<UserOutput[]>\r\n    {\r\n        return new Promise<UserOutput[]>((resolve,reject) =>{\r\n            this.userService.getCompanyUsers().subscribe(resData =>{\r\n                console.log(\"resolve\")\r\n                resolve(resData);\r\n            }\r\n            );\r\n        })\r\n    }\r\n    \r\n}","import { HttpClient, HttpParams } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { BehaviorSubject } from \"rxjs\";\r\nimport { take, tap } from \"rxjs/operators\";\r\nimport { Constant } from \"../constant/constant\";\r\nimport { BranchInput } from \"../model/branch-input.model\";\r\nimport { BranchOutput } from \"../model/branch-output.model\";\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class BranchService{\r\n\r\n    companyBranches = new BehaviorSubject<BranchOutput[]>(null);\r\n    constant = new Constant();\r\n    \r\n    constructor(private httpClient:HttpClient){}\r\n\r\n\r\n    public getAllBranchForList(){\r\n       return this.httpClient.get<BranchOutput[]>(this.constant.SERVICE_URL+\"/manage/branch/all\").pipe(take(1),\r\n        tap(resData =>{\r\n            this.companyBranches.next(resData);\r\n        }))\r\n    }\r\n\r\n    public getBranch(id:number){\r\n        return this.httpClient.get<BranchOutput>(this.constant.SERVICE_URL+\"/manage/branch\",{\r\n            params : new HttpParams().set('id',''+id)  \r\n        }).pipe(take(1));\r\n    }\r\n\r\n    public updateBranch(branch:BranchInput){\r\n       return this.httpClient.post(this.constant.SERVICE_URL+\"/manage/branch\",branch).pipe(take(1))\r\n    }\r\n\r\n    public removeBranch(id:number){\r\n        return this.httpClient.delete(this.constant.SERVICE_URL+\"/manage/branch\",{\r\n            params : new HttpParams().set('id',''+id)  \r\n        }).pipe(take(1));\r\n    }\r\n\r\n}","import { HttpClient, HttpParams } from \"@angular/common/http\";\r\nimport { Injectable, OnInit } from \"@angular/core\";\r\nimport { BehaviorSubject, Observable } from \"rxjs\";\r\nimport { take, tap } from \"rxjs/operators\";\r\nimport { Constant } from \"../constant/constant\";\r\nimport { UserInput } from \"../model/user-input.model\";\r\nimport { UserOutput } from \"../model/user-output.model\";\r\nimport { LocalStorageService } from \"./local-storage.service\";\r\n\r\n\r\n@Injectable({ providedIn: 'root'})\r\nexport class UserService implements OnInit{\r\n    constant = new Constant();\r\n    \r\n    userList = new BehaviorSubject<UserOutput[]>(null);\r\n    user = new BehaviorSubject<UserOutput>(null);\r\n\r\n    constructor(private httpClient: HttpClient,private localStorageService:LocalStorageService){}\r\n\r\n    ngOnInit(): void\r\n    {\r\n       \r\n    }\r\n\r\n    getCompanyUser(userId:number){\r\n      return this.httpClient.get<UserOutput>(this.constant.SERVICE_URL+'/manage/user',{\r\n          params: new HttpParams().set('id',''+userId)\r\n      }).pipe(take(1),tap(resData =>{\r\n        console.log(resData);\r\n        this.user.next(resData);\r\n\r\n      }));\r\n    }    \r\n\r\n    getCompanyUsers():Observable<UserOutput[]> {\r\n     return this.httpClient.get<UserOutput[]>(this.constant.SERVICE_URL+'/manage/user/all').pipe(take(1),tap(resData =>{\r\n\r\n     let userListTemp:UserOutput[] =[];\r\n      const response:UserOutput[] = JSON.parse(JSON.stringify(resData));\r\n      response.forEach(element => {\r\n        userListTemp.push(element);\r\n\r\n      });\r\n      this.userList.next(userListTemp);\r\n     }));\r\n    }\r\n\r\n    public registerUserForCompany(userInput:UserInput){\r\n     return this.httpClient.post(this.constant.SERVICE_URL+'/manage/user',userInput).pipe(take(1));\r\n    }\r\n\r\n    public removeUserForCompany(userId:number){\r\n      return this.httpClient.delete(this.constant.SERVICE_URL+'/manage/user',{\r\n        params : new HttpParams().set('id',''+userId)\r\n      }).pipe(take(1));\r\n    }\r\n\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvdXNlci91c2VyLWVkaXQvdXNlci1lZGl0LmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { AbstractControl, FormControl, FormGroup, ValidatorFn, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Account } from '../../core/model/account.model';\nimport { BranchOutput } from '../../core/model/branch-output.model';\nimport { UserInput } from '../../core/model/user-input.model';\nimport { AuthService } from '../../core/services/auth.service';\nimport { BranchService } from '../../core/services/branch.service';\nimport { UserService } from '../../core/services/user.service';\n\n@Component({\n  selector: 'app-user-edit',\n  templateUrl: './user-edit.component.html',\n  styleUrls: ['./user-edit.component.css']\n})\nexport class UserEditComponent implements OnInit {\n\n  form:FormGroup;\n  branches:BranchOutput[];\n  editMode:boolean = false;\n  branchesFormControl = new FormControl();\n  account:Account;\n  radioRole:string;\n\n  constructor(private authService:AuthService,private route:ActivatedRoute,private router:Router,private branchService:BranchService,private userService:UserService) { }\n\n  ngOnInit(): void {\n   this.account = this.authService.getAccount();\n   \n    this.editMode = this.route.snapshot.paramMap.get('id') ? true : false;\n    this.branchService.getAllBranchForList().subscribe(resData =>{\n      this.branches = resData;\n    });\n    \n    let userName = '';\n    let firstName = '';\n    let lastName = '';\n    let role = '';\n\n    if(this.editMode){\n      this.userService.user.subscribe(resData =>{\n        this.radioRole = resData.roleType[0];\n        userName = resData.userName;\n        firstName = resData.firstName;\n        lastName = resData.lastName;\n        role = this.radioRole;\n        \n\n        if(resData.branchId){\n          this.branchesFormControl = new FormControl(resData.branchId,Validators.required)\n          \n           \n        }\n       \n      });\n   }\n\n   this.form = new FormGroup({\n    userName:new FormControl(userName,Validators.required),\n    password:new FormControl('',this.conditionalValidator(\n      (()=>!this.editMode),Validators.required)\n    ),\n    rePassword:new FormControl('',this.conditionalValidator(\n      (()=>!this.editMode),Validators.required)\n    ),\n    firstName:new FormControl(firstName,Validators.required),\n    lastName:new FormControl(lastName,Validators.required),\n    role:new FormControl(role),\n    branches: this.branchesFormControl\n    });\n  }\n\n \n\n  save(){\n    if(this.form.valid){\n      console.log(this.form.value);\n      const registerForm:UserInput= this.form.value\n      if(this.editMode){\n        registerForm.id = this.route.snapshot.params['id'];\n      }\n\n      this.userService.registerUserForCompany(registerForm).subscribe(resData =>{\n        this.router.navigate(['/settings/user']);\n      });\n      \n    }else{\n      console.log('not valid');\n      \n    }\n  }\n\n  handleChange(event){\n  \n    this.radioRole = event;\n    if((event == 'STAFF' || event == 'SUPERVISOR' )&& !this.branches){\n      this.branchService.getAllBranchForList().subscribe();\n    }\n    \n  }\n  conditionalValidator(condition: (() => boolean), validator: ValidatorFn): ValidatorFn {\n    return (control: AbstractControl): {[key: string]: any} => {\n      if (! condition()) {\n        return null;\n      }\n      return validator(control);\n    }\n  }\n \n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvdXNlci91c2VyLWl0ZW0vdXNlci1pdGVtLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, Input, OnInit } from '@angular/core';\nimport { UserOutput } from '../../core/model/user-output.model';\nimport { UserService } from '../../core/services/user.service';\n\n@Component({\n  selector: '[app-user-item]',\n  templateUrl: './user-item.component.html',\n  styleUrls: ['./user-item.component.css']\n})\nexport class UserItemComponent implements OnInit {\n\n  @Input() user:UserOutput;\n  constructor(private userService:UserService) { }\n\n  ngOnInit(): void {\n  }\n\n  remove(userId:number){\n   this.userService.removeUserForCompany(userId).subscribe(resData =>{\n     this.userService.getCompanyUsers().subscribe();\n   })\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvdXNlci91c2VyLWxpc3QvdXNlci1saXN0LmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { take } from 'rxjs/operators';\nimport { Account } from '../../core/model/account.model';\nimport { UserOutput } from '../../core/model/user-output.model';\nimport { AuthService } from '../../core/services/auth.service';\nimport { UserService } from '../../core/services/user.service';\n\n\n@Component({\n  selector: 'app-user-list',\n  templateUrl: './user-list.component.html',\n  styleUrls: ['./user-list.component.css']\n})\nexport class UserListComponent implements OnInit {\n  users:UserOutput[];\n  myProfile:Account;\n  constructor(private userService:UserService,private authService:AuthService) { }\n\n  ngOnInit(): void {\n    this.authService.account.pipe(take(1)).subscribe(resData =>{\n      this.myProfile = resData;\n    });\n    this.userService.userList.subscribe(resData =>{\n      this.users = resData;\n    })\n  }\n\n}\n","import { CommonModule } from \"@angular/common\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { ReactiveFormsModule } from \"@angular/forms\";\r\nimport { RouterModule } from \"@angular/router\";\r\nimport { NgbModule } from \"@ng-bootstrap/ng-bootstrap\";\r\nimport { UserEditResolver } from \"../core/resolver/user-edit-resolver.service\";\r\nimport { UserResolverService } from \"../core/resolver/user-resolver.service\";\r\nimport { UserEditComponent } from './user-edit/user-edit.component';\r\nimport { UserItemComponent } from './user-item/user-item.component';\r\nimport { UserListComponent } from \"./user-list/user-list.component\";\r\n\r\n@NgModule({\r\n    declarations:[\r\n        UserListComponent,\r\n        UserItemComponent,\r\n        UserEditComponent\r\n    ],\r\n    imports:[\r\n        CommonModule,\r\n        NgbModule,\r\n        ReactiveFormsModule,\r\n        RouterModule.forChild([\r\n            { path: '', component:UserListComponent, resolve:[UserResolverService]},\r\n            { path: 'add',component:UserEditComponent },\r\n            { path: 'edit/:id',component:UserEditComponent, resolve:[UserEditResolver],data: { editMode:true } }\r\n        ])\r\n    ],\r\n    exports:[]\r\n})\r\nexport class UserModule{\r\n\r\n}"]}