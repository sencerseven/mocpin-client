{"version":3,"sources":["./src/app/modules/user/user-edit/user-edit.component.html","./src/app/modules/user/user-item/user-item.component.html","./src/app/modules/user/user-list/user-list.component.html","./src/app/modules/core/resolver/user-edit-resolver.service.ts","./src/app/modules/core/resolver/user-resolver.service.ts","./src/app/modules/core/services/branch.service.ts","./src/app/modules/core/services/user.service.ts","./src/app/modules/user/user-edit/user-edit.component.css","./src/app/modules/user/user-edit/user-edit.component.ts","./src/app/modules/user/user-item/user-item.component.css","./src/app/modules/user/user-item/user-item.component.ts","./src/app/modules/user/user-list/user-list.component.css","./src/app/modules/user/user-list/user-list.component.ts","./src/app/modules/user/user.module.ts"],"names":[],"mappings":"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","file":"src-app-modules-user-user-module-es2015.js","sourcesContent":["export default \"<div class=\\\"header bg-gradient-danger pb-8 pt-5 pt-md-8\\\">\\n    <div class=\\\"container-fluid\\\">\\n      <div class=\\\"header-body\\\">\\n        <!-- Card stats -->\\n        \\n      </div>\\n    </div>\\n  </div>\\n  <!-- Page content -->\\n  <div class=\\\"container-fluid mt--7\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-xl-12 order-xl-1\\\">\\n      <form role=\\\"form\\\" [formGroup]=\\\"form\\\" (ngSubmit)=\\\"save()\\\">\\n        <div class=\\\"card bg-secondary shadow\\\">\\n          <div class=\\\"card-header bg-white border-0\\\">\\n            <div class=\\\"row align-items-center\\\">\\n              <div class=\\\"col-8\\\">\\n                <h3 class=\\\"mb-0\\\">Kullanıcı Ekle</h3>\\n              </div>\\n              <div class=\\\"col-4 text-right\\\">\\n                <button type=\\\"submit\\\" class=\\\"btn btn-sm btn-primary\\\">Kaydet</button>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"card-body\\\">\\n\\n            <h6 class=\\\"heading-small text-muted mb-4\\\">Kişisel Bilgiler</h6>\\n            <div class=\\\"pl-lg-4\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-lg-6\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label class=\\\"form-control-label\\\" for=\\\"input-username\\\">Kullanıcı Adı</label>\\n                    <input type=\\\"text\\\" formControlName=\\\"userName\\\" id=\\\"input-username\\\" name=\\\"userName\\\"\\n                      class=\\\"form-control form-control-alternative\\\">\\n                  </div>\\n                </div>\\n              </div>\\n\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-lg-6\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label class=\\\"form-control-label\\\" for=\\\"input-password\\\">Şifre</label>\\n                    <input type=\\\"password\\\" formControlName=\\\"password\\\" id=\\\"input-password\\\" name=\\\"password\\\"\\n                      class=\\\"form-control form-control-alternative\\\">\\n                  </div>\\n                </div>\\n                <div class=\\\"col-lg-6\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label class=\\\"form-control-label\\\" for=\\\"input-repassword\\\">Şifre Tekrar</label>\\n                    <input type=\\\"password\\\" formControlName=\\\"rePassword\\\" id=\\\"input-repassword\\\"  name=\\\"rePassword\\\"\\n                      class=\\\"form-control form-control-alternative\\\" >\\n                  </div>\\n                </div>\\n              </div>\\n\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-lg-6\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label class=\\\"form-control-label\\\" for=\\\"input-first-name\\\">Adı</label>\\n                    <input type=\\\"text\\\" formControlName=\\\"firstName\\\" id=\\\"input-first-name\\\" name=\\\"firstName\\\"\\n                      class=\\\"form-control form-control-alternative\\\">\\n                  </div>\\n                </div>\\n                <div class=\\\"col-lg-6\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label class=\\\"form-control-label\\\" for=\\\"input-last-name\\\">Soyadı</label>\\n                    <input type=\\\"text\\\" formControlName=\\\"lastName\\\" id=\\\"input-last-name\\\"  name=\\\"lastName\\\"\\n                      class=\\\"form-control form-control-alternative\\\" >\\n                  </div>\\n                </div>\\n              </div>\\n\\n\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-lg-6\\\">\\n                  <div class=\\\"form-group\\\" >\\n                    <label *ngIf=\\\"account.isAdmin()\\\">\\n                        <input type=\\\"radio\\\"  value=\\\"ADMIN\\\" formControlName=\\\"role\\\" (change)=\\\"handleChange($event.target.value)\\\">\\n                        <span>Admin</span>\\n                    </label>\\n                    <label>\\n                      <input type=\\\"radio\\\" value=\\\"SUPERVISOR\\\" formControlName=\\\"role\\\" (change)=\\\"handleChange($event.target.value)\\\">\\n                      <span>Supervisor</span>\\n                  </label>\\n                    <label>\\n                        <input type=\\\"radio\\\" value=\\\"STAFF\\\" formControlName=\\\"role\\\" (change)=\\\"handleChange($event.target.value)\\\">\\n                        <span>Staff</span>\\n                    </label>\\n                  </div>\\n                </div>\\n                <div class=\\\"col-lg-6\\\" *ngIf=\\\"account.isAdmin() && branches && (radioRole == 'STAFF' || radioRole == 'SUPERVISOR')\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <label class=\\\"form-control-label\\\" for=\\\"input-branches\\\">Şubeler</label>\\n                      <select id=\\\"input-branches\\\" class=\\\"form-control form-control-alternative\\\" formControlName=\\\"branches\\\"  >\\n                        <option *ngFor=\\\"let b of branches\\\" [value]=\\\"b.id\\\" >{{ b.name }}</option>\\n                       </select> \\n                    </div>\\n                </div>    \\n\\n\\n              </div>\\n\\n            </div>\\n            <hr class=\\\"my-4\\\" />\\n         \\n          </div>\\n        </div>\\n        </form>\\n    </div>\\n  </div>\\n</div>\\n\\n  \"","export default \"<th scope=\\\"row\\\">\\n    <div class=\\\"media align-items-center\\\">\\n      <a href=\\\"javascript:void(0)\\\" class=\\\"avatar rounded-circle mr-3\\\">\\n        <img alt=\\\"Image placeholder\\\" src=\\\"../assets/img/theme/bootstrap.jpg\\\">\\n      </a>\\n      <div class=\\\"media-body\\\">\\n        <span class=\\\"mb-0 text-sm\\\">{{ user.userName }}</span>\\n      </div>\\n    </div>\\n  </th>\\n  <th scope=\\\"row\\\">\\n    <div class=\\\"media align-items-center\\\">\\n      <div class=\\\"media-body\\\">\\n        <span class=\\\"mb-0 text-sm\\\">{{ user.firstName }}</span>\\n      </div>\\n    </div>\\n  </th>\\n  <th scope=\\\"row\\\">\\n    <div class=\\\"media align-items-center\\\">\\n      <div class=\\\"media-body\\\">\\n        <span class=\\\"mb-0 text-sm\\\">{{ user.lastName  }}</span>\\n      </div>\\n    </div>\\n  </th>\\n  <th scope=\\\"row\\\">\\n    <div class=\\\"media align-items-center\\\">\\n      <div class=\\\"media-body\\\">\\n        <span class=\\\"mb-0 text-sm\\\">{{ user.email  }}</span>\\n      </div>\\n    </div>\\n  </th>\\n  <th scope=\\\"row\\\">\\n    <div class=\\\"media align-items-center\\\">\\n      <div class=\\\"media-body\\\">\\n        <span class=\\\"mb-0 text-sm\\\">{{ user.roleType.join(', ') }}</span>\\n      </div>\\n    </div>\\n  </th>\\n  <td class=\\\"text-right\\\">\\n    <div ngbDropdown placement=\\\"bottom-right\\\">\\n      <a class=\\\"btn btn-sm btn-icon-only text-light\\\" ngbDropdownToggle>\\n        <i class=\\\"fas fa-ellipsis-v\\\"></i>\\n      </a>\\n      <div ngbDropdownMenu class=\\\" dropdown-menu-right dropdown-menu-arrow\\\">\\n        <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['edit', user.id]\\\">Editle</a>\\n        <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\">Pasife Çek</a>\\n        <a class=\\\"dropdown-item\\\" style=\\\"color:red\\\" (click)=\\\"remove(user.id)\\\">Sil</a>\\n      </div>\\n    </div>\\n  </td>\\n\"","export default \"<div class=\\\"header bg-gradient-danger pb-8 pt-5 pt-md-8\\\">\\n    <div class=\\\"container-fluid\\\">\\n      <div class=\\\"header-body\\\">\\n        <!-- Card stats -->\\n        \\n      </div>\\n    </div>\\n  </div>\\n  <!-- Page content -->\\n  <div class=\\\"container-fluid mt--7\\\">\\n    <!-- Table -->\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col\\\">\\n        <div class=\\\"card shadow\\\">\\n          <div class=\\\"card-header border-0\\\">\\n            <div class=\\\"row align-items-center\\\">\\n              <div class=\\\"col\\\">\\n                <h3 class=\\\"mb-0\\\">Kullanıcı Listesi</h3>\\n              </div>\\n              <div class=\\\"col text-right\\\">\\n                <a href=\\\"#!\\\" class=\\\"btn btn-sm btn-primary\\\" [routerLink]=\\\"['add']\\\">Oluştur</a>\\n              </div>\\n            </div>\\n          </div>\\n          \\n          <div class=\\\"table-responsive\\\">\\n            <table class=\\\"table align-items-center table-flush\\\">\\n              <thead class=\\\"thead-light\\\">\\n                <tr>\\n                  <th scope=\\\"col\\\">Kullanıcı Adı:</th>\\n                  <th scope=\\\"col\\\">Adı</th>\\n                  <th scope=\\\"col\\\">Soyadı</th>\\n                  <th scope=\\\"col\\\">Email</th>\\n                  <th scope=\\\"col\\\">Rol</th>\\n                  <th scope=\\\"col\\\"></th>\\n                </tr>\\n              </thead>\\n              <tbody style=\\\"padding: 20px;\\\">\\n                <ng-container  *ngFor=\\\"let userEl of users;\\\" >\\n                  <tr app-user-item *ngIf=\\\"userEl.id != myProfile.accountDetail.id\\\" [user]='userEl'></tr>\\n              </ng-container>\\n              </tbody>\\n            </table>\\n          </div>\\n          <div class=\\\"card-footer py-4\\\">\\n            <nav aria-label=\\\"...\\\">\\n              <ul class=\\\"pagination justify-content-end mb-0\\\">\\n  \\n                \\n                \\n              </ul>\\n            </nav>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <!-- Dark table -->\\n   \\n  </div>\\n  \"","import { Injectable } from \"@angular/core\";\r\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from \"@angular/router\";\r\nimport { Observable } from \"rxjs/internal/Observable\";\r\nimport { UserOutput } from \"../model/user-output.model\";\r\nimport { UserService } from \"../services/user.service\";\r\n\r\n@Injectable({ providedIn : 'root' })\r\nexport class UserEditResolver implements Resolve<UserOutput>{\r\n\r\n    constructor(private userService:UserService){}\r\n\r\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): UserOutput | Observable<UserOutput> | Promise<UserOutput>\r\n    {\r\n        return new Promise((resolve,rejects) =>{\r\n            this.userService.getCompanyUser(route.params['id']).subscribe(resData =>{\r\n                resolve(resData);\r\n            })\r\n            \r\n        })\r\n    }\r\n    \r\n}","import { Injectable } from \"@angular/core\";\r\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from \"@angular/router\";\r\nimport { Observable } from \"rxjs/internal/Observable\";\r\nimport { UserOutput } from \"../model/user-output.model\";\r\nimport { UserService } from \"../services/user.service\";\r\n\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class UserResolverService implements Resolve<UserOutput[]>{\r\n\r\n    constructor(private userService:UserService){}\r\n\r\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): UserOutput[] | Observable<UserOutput[]> | Promise<UserOutput[]>\r\n    {\r\n        return new Promise<UserOutput[]>((resolve,reject) =>{\r\n            this.userService.getCompanyUsers().subscribe(resData =>{\r\n                console.log(\"resolve\")\r\n                resolve(resData);\r\n            }\r\n            );\r\n        })\r\n    }\r\n    \r\n}","import { HttpClient, HttpParams } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { BehaviorSubject } from \"rxjs\";\r\nimport { take, tap } from \"rxjs/operators\";\r\nimport { Constant } from \"../constant/constant\";\r\nimport { BranchInput } from \"../model/branch-input.model\";\r\nimport { BranchOutput } from \"../model/branch-output.model\";\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class BranchService{\r\n\r\n    companyBranches = new BehaviorSubject<BranchOutput[]>(null);\r\n    constant = new Constant();\r\n    \r\n    constructor(private httpClient:HttpClient){}\r\n\r\n\r\n    public getAllBranchForList(){\r\n       return this.httpClient.get<BranchOutput[]>(this.constant.SERVICE_URL+\"/manage/branch/all\").pipe(take(1),\r\n        tap(resData =>{\r\n            this.companyBranches.next(resData);\r\n        }))\r\n    }\r\n\r\n    public getBranch(id:number){\r\n        return this.httpClient.get<BranchOutput>(this.constant.SERVICE_URL+\"/manage/branch\",{\r\n            params : new HttpParams().set('id',''+id)  \r\n        }).pipe(take(1));\r\n    }\r\n\r\n    public updateBranch(branch:BranchInput){\r\n       return this.httpClient.post(this.constant.SERVICE_URL+\"/manage/branch\",branch).pipe(take(1))\r\n    }\r\n\r\n    public removeBranch(id:number){\r\n        return this.httpClient.delete(this.constant.SERVICE_URL+\"/manage/branch\",{\r\n            params : new HttpParams().set('id',''+id)  \r\n        }).pipe(take(1));\r\n    }\r\n\r\n}","import { HttpClient, HttpParams } from \"@angular/common/http\";\r\nimport { Injectable, OnInit } from \"@angular/core\";\r\nimport { BehaviorSubject, Observable } from \"rxjs\";\r\nimport { take, tap } from \"rxjs/operators\";\r\nimport { Constant } from \"../constant/constant\";\r\nimport { UserInput } from \"../model/user-input.model\";\r\nimport { UserOutput } from \"../model/user-output.model\";\r\nimport { LocalStorageService } from \"./local-storage.service\";\r\n\r\n\r\n@Injectable({ providedIn: 'root'})\r\nexport class UserService implements OnInit{\r\n    constant = new Constant();\r\n    \r\n    userList = new BehaviorSubject<UserOutput[]>(null);\r\n    user = new BehaviorSubject<UserOutput>(null);\r\n\r\n    constructor(private httpClient: HttpClient,private localStorageService:LocalStorageService){}\r\n\r\n    ngOnInit(): void\r\n    {\r\n       \r\n    }\r\n\r\n    getCompanyUser(userId:number){\r\n      return this.httpClient.get<UserOutput>(this.constant.SERVICE_URL+'/manage/user',{\r\n          params: new HttpParams().set('id',''+userId)\r\n      }).pipe(take(1),tap(resData =>{\r\n        console.log(resData);\r\n        this.user.next(resData);\r\n\r\n      }));\r\n    }    \r\n\r\n    getCompanyUsers():Observable<UserOutput[]> {\r\n     return this.httpClient.get<UserOutput[]>(this.constant.SERVICE_URL+'/manage/user/all').pipe(take(1),tap(resData =>{\r\n\r\n     let userListTemp:UserOutput[] =[];\r\n      const response:UserOutput[] = JSON.parse(JSON.stringify(resData));\r\n      response.forEach(element => {\r\n        userListTemp.push(element);\r\n\r\n      });\r\n      this.userList.next(userListTemp);\r\n     }));\r\n    }\r\n\r\n    public registerUserForCompany(userInput:UserInput){\r\n     return this.httpClient.post(this.constant.SERVICE_URL+'/manage/user',userInput).pipe(take(1));\r\n    }\r\n\r\n    public removeUserForCompany(userId:number){\r\n      return this.httpClient.delete(this.constant.SERVICE_URL+'/manage/user',{\r\n        params : new HttpParams().set('id',''+userId)\r\n      }).pipe(take(1));\r\n    }\r\n\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvdXNlci91c2VyLWVkaXQvdXNlci1lZGl0LmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { AbstractControl, FormControl, FormGroup, ValidatorFn, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Account } from '../../core/model/account.model';\nimport { BranchOutput } from '../../core/model/branch-output.model';\nimport { UserInput } from '../../core/model/user-input.model';\nimport { AuthService } from '../../core/services/auth.service';\nimport { BranchService } from '../../core/services/branch.service';\nimport { UserService } from '../../core/services/user.service';\n\n@Component({\n  selector: 'app-user-edit',\n  templateUrl: './user-edit.component.html',\n  styleUrls: ['./user-edit.component.css']\n})\nexport class UserEditComponent implements OnInit {\n\n  form:FormGroup;\n  branches:BranchOutput[];\n  editMode:boolean = false;\n  branchesFormControl = new FormControl();\n  account:Account;\n  radioRole:string;\n\n  constructor(private authService:AuthService,private route:ActivatedRoute,private router:Router,private branchService:BranchService,private userService:UserService) { }\n\n  ngOnInit(): void {\n   this.account = this.authService.getAccount();\n   \n    this.editMode = this.route.snapshot.paramMap.get('id') ? true : false;\n    this.branchService.getAllBranchForList().subscribe(resData =>{\n      this.branches = resData;\n    });\n    \n    let userName = '';\n    let firstName = '';\n    let lastName = '';\n    let role = '';\n\n    if(this.editMode){\n      this.userService.user.subscribe(resData =>{\n        this.radioRole = resData.roleType[0];\n        userName = resData.userName;\n        firstName = resData.firstName;\n        lastName = resData.lastName;\n        role = this.radioRole;\n        \n\n        if(resData.branchId){\n          this.branchesFormControl = new FormControl(resData.branchId,Validators.required)\n          \n           \n        }\n       \n      });\n   }\n\n   this.form = new FormGroup({\n    userName:new FormControl(userName,Validators.required),\n    password:new FormControl('',this.conditionalValidator(\n      (()=>!this.editMode),Validators.required)\n    ),\n    rePassword:new FormControl('',this.conditionalValidator(\n      (()=>!this.editMode),Validators.required)\n    ),\n    firstName:new FormControl(firstName,Validators.required),\n    lastName:new FormControl(lastName,Validators.required),\n    role:new FormControl(role),\n    branches: this.branchesFormControl\n    });\n  }\n\n \n\n  save(){\n    if(this.form.valid){\n      console.log(this.form.value);\n      const registerForm:UserInput= this.form.value\n      if(this.editMode){\n        registerForm.id = this.route.snapshot.params['id'];\n      }\n\n      this.userService.registerUserForCompany(registerForm).subscribe(resData =>{\n        this.router.navigate(['/settings/user']);\n      });\n      \n    }else{\n      console.log('not valid');\n      \n    }\n  }\n\n  handleChange(event){\n  \n    this.radioRole = event;\n    if((event == 'STAFF' || event == 'SUPERVISOR' )&& !this.branches){\n      this.branchService.getAllBranchForList().subscribe();\n    }\n    \n  }\n  conditionalValidator(condition: (() => boolean), validator: ValidatorFn): ValidatorFn {\n    return (control: AbstractControl): {[key: string]: any} => {\n      if (! condition()) {\n        return null;\n      }\n      return validator(control);\n    }\n  }\n \n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvdXNlci91c2VyLWl0ZW0vdXNlci1pdGVtLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, Input, OnInit } from '@angular/core';\nimport { UserOutput } from '../../core/model/user-output.model';\nimport { UserService } from '../../core/services/user.service';\n\n@Component({\n  selector: '[app-user-item]',\n  templateUrl: './user-item.component.html',\n  styleUrls: ['./user-item.component.css']\n})\nexport class UserItemComponent implements OnInit {\n\n  @Input() user:UserOutput;\n  constructor(private userService:UserService) { }\n\n  ngOnInit(): void {\n  }\n\n  remove(userId:number){\n   this.userService.removeUserForCompany(userId).subscribe(resData =>{\n     this.userService.getCompanyUsers().subscribe();\n   })\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvdXNlci91c2VyLWxpc3QvdXNlci1saXN0LmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { take } from 'rxjs/operators';\nimport { Account } from '../../core/model/account.model';\nimport { UserOutput } from '../../core/model/user-output.model';\nimport { AuthService } from '../../core/services/auth.service';\nimport { UserService } from '../../core/services/user.service';\n\n\n@Component({\n  selector: 'app-user-list',\n  templateUrl: './user-list.component.html',\n  styleUrls: ['./user-list.component.css']\n})\nexport class UserListComponent implements OnInit {\n  users:UserOutput[];\n  myProfile:Account;\n  constructor(private userService:UserService,private authService:AuthService) { }\n\n  ngOnInit(): void {\n    this.authService.account.pipe(take(1)).subscribe(resData =>{\n      this.myProfile = resData;\n    });\n    this.userService.userList.subscribe(resData =>{\n      this.users = resData;\n    })\n  }\n\n}\n","import { CommonModule } from \"@angular/common\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { ReactiveFormsModule } from \"@angular/forms\";\r\nimport { RouterModule } from \"@angular/router\";\r\nimport { NgbModule } from \"@ng-bootstrap/ng-bootstrap\";\r\nimport { UserEditResolver } from \"../core/resolver/user-edit-resolver.service\";\r\nimport { UserResolverService } from \"../core/resolver/user-resolver.service\";\r\nimport { UserEditComponent } from './user-edit/user-edit.component';\r\nimport { UserItemComponent } from './user-item/user-item.component';\r\nimport { UserListComponent } from \"./user-list/user-list.component\";\r\n\r\n@NgModule({\r\n    declarations:[\r\n        UserListComponent,\r\n        UserItemComponent,\r\n        UserEditComponent\r\n    ],\r\n    imports:[\r\n        CommonModule,\r\n        NgbModule,\r\n        ReactiveFormsModule,\r\n        RouterModule.forChild([\r\n            { path: '', component:UserListComponent, resolve:[UserResolverService]},\r\n            { path: 'add',component:UserEditComponent },\r\n            { path: 'edit/:id',component:UserEditComponent, resolve:[UserEditResolver],data: { editMode:true } }\r\n        ])\r\n    ],\r\n    exports:[]\r\n})\r\nexport class UserModule{\r\n\r\n}"],"sourceRoot":"webpack:///"}